"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[547],{1462:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return m},default:function(){return h}});var n=a(7462),i=a(3366),o=(a(7294),a(3905)),r=["components"],l={sidebar_position:4},s="*GoFile",p={unversionedId:"go-file",id:"go-file",isDocsHomePage:!1,title:"*GoFile",description:"If you want to generate go files, I strongly recommend that you use the goFile package. This package handles the import",source:"@site/docs/go-file.md",sourceDirName:".",slug:"/go-file",permalink:"/go-codegen/docs/go-file",editUrl:"https://github.com/mathbalduino/go-codegen/edit/docs/docs/go-file.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Helpers",permalink:"/go-codegen/docs/helpers"},next:{title:"*TsFile",permalink:"/go-codegen/docs/ts-file"}},m=[{value:"*GoImports",id:"goimports",children:[{value:"New",id:"new",children:[]},{value:"AddImport",id:"addimport",children:[]},{value:"AliasFromPath",id:"aliasfrompath",children:[]},{value:"MergeImports",id:"mergeimports",children:[]},{value:"NeedImport",id:"needimport",children:[]},{value:"PackagePath",id:"packagepath",children:[]},{value:"SourceCode",id:"sourcecode",children:[]},{value:"Example",id:"example",children:[]}]},{value:"*GoFile",id:"gofile-1",children:[{value:"New",id:"new-1",children:[]},{value:"AddCode",id:"addcode",children:[]},{value:"Name",id:"name",children:[]},{value:"PackageName",id:"packagename",children:[]},{value:"Save",id:"save",children:[]},{value:"SourceCode",id:"sourcecode-1",children:[]},{value:"Example",id:"example-1",children:[]}]}],d={toc:m};function h(e){var t=e.components,a=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gofile"},"*GoFile"),(0,o.kt)("p",null,"If you want to generate ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," files, I strongly recommend that you use the ",(0,o.kt)("inlineCode",{parentName:"p"},"goFile")," package. This package handles the import\nlist of the file automatically (trust me, this is very welcome), and some minor stuff (code formatting, persistence)."),(0,o.kt)("p",null,"Every ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoFile")," has an embedded ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports"),", allowing you to manipulate the import list directly, if you want to. The\n",(0,o.kt)("inlineCode",{parentName:"p"},"*GoFile")," can be created using the exported functions from the ",(0,o.kt)("inlineCode",{parentName:"p"},"goFile")," package, while the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports")," can be created\nusing the exported functions from the ",(0,o.kt)("inlineCode",{parentName:"p"},"goFile.goImports")," package."),(0,o.kt)("h2",{id:"goimports"},"*GoImports"),(0,o.kt)("p",null,"This is the most important component of the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoFile")," struct, so you need to understand it before going to the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoFile"),"\nAPI (that is, basically, just ",(0,o.kt)("inlineCode",{parentName:"p"},"get"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"set")," methods). You will find the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports")," code under the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-codegen/tree/main/goFile/goImports"},"goImports package"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports")," struct represents a list of imports made by some package. This list can be the import list inside some\nfile (that belongs to a package), for example. The important thing is: ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports")," stores information about the imports\nbeing made by some package."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports")," struct is composed by two fields: ",(0,o.kt)("inlineCode",{parentName:"p"},"packagePath string")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"imports map[string]string"),".\nMore details ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-codegen/blob/main/goFile/goImports/new.go"},"here"),"."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"I could've just used the ",(0,o.kt)("inlineCode",{parentName:"p"},"golang.org/x/tools/imports.Process()")," function to insert the missing imports, but sometimes I've\nhad some issues, so I decided to implement it myself (I still use the ",(0,o.kt)("inlineCode",{parentName:"p"},"Process()")," function, but just to format the code)"))),(0,o.kt)("h3",{id:"new"},"New"),(0,o.kt)("p",null,"You can create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports")," instance using the ",(0,o.kt)("inlineCode",{parentName:"p"},"New")," function, described below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func New(packagePath string) *GoImports { ... }\n")),(0,o.kt)("p",null,"This function takes the ",(0,o.kt)("inlineCode",{parentName:"p"},"package path")," of the package that owns the import list (represented as the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports")," itself).\nIf you're using ",(0,o.kt)("inlineCode",{parentName:"p"},"go modules"),", the string can be something like ",(0,o.kt)("inlineCode",{parentName:"p"},"<repository_url>/<path>/<to>/<pkg>"),". "),(0,o.kt)("p",null,"Example: if we're generating code that will belong to the ",(0,o.kt)("inlineCode",{parentName:"p"},"go-codegen")," library, the ",(0,o.kt)("inlineCode",{parentName:"p"},"packagePath")," argument will be\nequal to ",(0,o.kt)("inlineCode",{parentName:"p"},'"github.com/mathbalduino/go-codegen"')," (for the root package)."),(0,o.kt)("h3",{id:"addimport"},"AddImport"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (i *GoImports) AddImport(suggestedAlias, packagePath string) string { ... }\n")),(0,o.kt)("p",null,"When adding imports to any ",(0,o.kt)("inlineCode",{parentName:"p"},"go file"),", you can use aliases to help distinguish imports with the same root package name.\nThis method receives a string representing the desired alias and the imported package path. Note that the alias is just\na suggestion, since it will be changed if there's a clash with another alias in the list."),(0,o.kt)("p",null,"The returned string will be the final alias used to identify the given import. If the import is already in the list, its\nalias will be returned."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The aliases will always be used when the final code is generated, even if they're not required (",(0,o.kt)("inlineCode",{parentName:"p"},'import fmt "fmt"')," instead\nof just ",(0,o.kt)("inlineCode",{parentName:"p"},'import "fmt"'),", for example)"))),(0,o.kt)("h3",{id:"aliasfrompath"},"AliasFromPath"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (i *GoImports) AliasFromPath(packagePath string) string { ... }\n")),(0,o.kt)("p",null,"If you want to query the alias used to represent some imported package, you can give its package path to this method. If\nthe returned ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," is empty, there's no import with the given package path inside the import list."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This method is very useful when generating code. I frequently need to know what will be the alias of some import,\nand querying the import list is the best option"))),(0,o.kt)("h3",{id:"mergeimports"},"MergeImports"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (i *GoImports) MergeImports(other *GoImports) map[string]string { ... }\n")),(0,o.kt)("p",null,"If you have two import lists and want to merge them, this method will do it for you. Note that this method will just\niterate over the given import list and try to add each one, using the ",(0,o.kt)("inlineCode",{parentName:"p"},"AddImport")," method."),(0,o.kt)("p",null,"The returned map represents the aliases that changed when being added, in case of clashes. The map is in the form of\n",(0,o.kt)("inlineCode",{parentName:"p"},"originalAlias -> newAlias"),". The returned map can be empty if there's no clashes."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you have two import lists that belong to two different package paths, this method may ",(0,o.kt)("inlineCode",{parentName:"p"},"panic"),". Example:"),(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Say that you have two import lists: one that belongs to package ",(0,o.kt)("inlineCode",{parentName:"li"},"A")," and another one to package ",(0,o.kt)("inlineCode",{parentName:"li"},"B")),(0,o.kt)("li",{parentName:"ul"},"The package ",(0,o.kt)("inlineCode",{parentName:"li"},"B")," imports the package ",(0,o.kt)("inlineCode",{parentName:"li"},"A")),(0,o.kt)("li",{parentName:"ul"},"You merge the import list of the package ",(0,o.kt)("inlineCode",{parentName:"li"},"B")," into the import list of the package ",(0,o.kt)("inlineCode",{parentName:"li"},"A")),(0,o.kt)("li",{parentName:"ul"},"Since the package ",(0,o.kt)("inlineCode",{parentName:"li"},"A")," cannot import itself, the method will ",(0,o.kt)("inlineCode",{parentName:"li"},"panic"))),(0,o.kt)("p",{parentName:"div"},"More details ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-codegen/blob/20cc90dac2de869cd647272abfabf5333e692553/goFile/goImports/mergeImports.go"},"here"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-codegen/blob/20cc90dac2de869cd647272abfabf5333e692553/goFile/goImports/addImport.go#L20"},"here")))),(0,o.kt)("h3",{id:"needimport"},"NeedImport"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (i *GoImports) NeedImport(otherPackagePath string) bool { ... }\n")),(0,o.kt)("p",null,"Sometimes, you will need to test if some package needs to be imported in order to be accessible from the package that owns\nthe import list. "),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This method will just compare the strings (the one given to the ",(0,o.kt)("inlineCode",{parentName:"p"},"New")," function and the one given to the\nmethod itself), so ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"pay attention"))))),(0,o.kt)("h3",{id:"packagepath"},"PackagePath"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (i *GoImports) PackagePath() string { ... }\n")),(0,o.kt)("p",null,"Just a getter to the string that represents the package path of the package that owns the import list."),(0,o.kt)("h3",{id:"sourcecode"},"SourceCode"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (i *GoImports) SourceCode() string { ... }\n")),(0,o.kt)("p",null,"When you have finished adding imports to the import list, you can use this method to generate valid ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," code that\ncan be attached to some file."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'The returned string is just the "import" section, not the entire file, so you cannot compile it right away'))),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"We will create an import list of some file inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"example")," package (so, the generated code will be put inside the\n",(0,o.kt)("inlineCode",{parentName:"p"},"example")," package):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n    "github.com/mathbalduino/go-codegen/goFile/goImports"\n)\n\nfunc main() {\n    importList := goImports.New("example")\n    importList.AddImport("fmt", "fmt")\n    importList.AddImport("time", "time")\n    importList.AddImport("logger", "github.com/mathbalduino/go-log")\n\n    anotherList := goImports.New("anotherPkg")\n    anotherList.AddImport("sync", "sync")\n    anotherList.AddImport("fmt", "fmt")\n    // anotherList.Add("example", "example") // If enabled, causes panic\n\n    importList.MergeImports(anotherList)\n    fmt.Println(importList.SourceCode())\n    // stdout (import order not guaranteed):\n    //\n    // import (\n    //    fmt "fmt"\n    //    time "time"\n    //    logger "github.com/mathbalduino/go-log"\n    //    sync "sync"\n    // )\n}\n')),(0,o.kt)("h2",{id:"gofile-1"},"*GoFile"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoFile")," struct holds information about the file: ",(0,o.kt)("inlineCode",{parentName:"p"},"name"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"packageName")," (the name, not the path), the ",(0,o.kt)("inlineCode",{parentName:"p"},"sourceCode"),"\n(the file data, or code) and the ",(0,o.kt)("inlineCode",{parentName:"p"},"importList")," (as an embedded ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports")," struct). You will find the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoFile")," code under\nthe ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-codegen/tree/main/goFile"},"goFile package"),"."),(0,o.kt)("p",null,"This struct will have all the methods from ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports"),", plus the ones describe below."),(0,o.kt)("h3",{id:"new-1"},"New"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func New(filename, packageName, packagePath string) *GoFile { ... }\n")),(0,o.kt)("p",null,"This function will create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," file instance. Note that the ",(0,o.kt)("inlineCode",{parentName:"p"},"filename")," will receive some suffix (copyright and\nfile extension), so you don't need to pass ",(0,o.kt)("inlineCode",{parentName:"p"},'"myfile.go"'),", just use ",(0,o.kt)("inlineCode",{parentName:"p"},'"myfile"')," instead."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"packageName")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"packagePath")," are the name and the import path of the package that the file will belong to, after\npersisted. If you're creating a file for the ",(0,o.kt)("inlineCode",{parentName:"p"},"go-codegen")," library root package, the arguments will be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// New(filename, packageName, packagePath)\nNew("exampleFileName", "parser", "github.com/mathbalduino/go-codegen")\n')),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you pass the wrong ",(0,o.kt)("inlineCode",{parentName:"p"},"packageName"),", your package will not compile, since it will have 2 different package names. ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Pay\nattention"))))),(0,o.kt)("h3",{id:"addcode"},"AddCode"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (f *GoFile) AddCode(newSourceCode string) { ... }\n")),(0,o.kt)("p",null,"This method will just append the given string to the file body"),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Don't use this method to add code related to the package information (",(0,o.kt)("inlineCode",{parentName:"p"},"package <pkgName>")," keyword), or code related to\nthe file import list (use the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoImports")," API to do this). These things will be handled automatically"))),(0,o.kt)("h3",{id:"name"},"Name"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (f *GoFile) Name() string { ... }\n")),(0,o.kt)("p",null,"Just a getter to the name of the file. Note that the returned string will contain the copyright and the file extension."),(0,o.kt)("h3",{id:"packagename"},"PackageName"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (f *GoFile) PackageName() string { ... }\n")),(0,o.kt)("p",null,"Just a getter to the package name that file belongs to."),(0,o.kt)("h3",{id:"save"},"Save"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (f *GoFile) Save(headerTitle, folder string) error { ... }\n")),(0,o.kt)("p",null,"This is one of the most important methods of the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoFile")," API. This method is the responsible for building the content of\nthe file and persisting it to the ",(0,o.kt)("inlineCode",{parentName:"p"},"filesystem"),"."),(0,o.kt)("p",null,"Note that this method will call the ",(0,o.kt)("inlineCode",{parentName:"p"},"SourceCode")," method, in order to build the file content, and use the ",(0,o.kt)("inlineCode",{parentName:"p"},"os.Create"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"os.Write")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"os.Close")," functions."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"headerTitle")," is just a string that will be put inside the file copyright comment section (right at the header).\nUsually, I use the path and version of the library that generated the code (something like ",(0,o.kt)("inlineCode",{parentName:"p"},'"<library>/<import>/<path> v1.0.0"'),"),\nbut you can use anything."),(0,o.kt)("h3",{id:"sourcecode-1"},"SourceCode"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (f *GoFile) SourceCode(headerTitle, filepath string) ([]byte, error) { ... }\n")),(0,o.kt)("p",null,"This method will build the content of the file, letting it ready to be compiled."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"headerTitle")," arg is just a string that will be put inside the file copyright comment section (right at the header).\nUsually, I use something like ",(0,o.kt)("inlineCode",{parentName:"p"},'"<library>/<import>/<path> v1.0.0"'),", but you can use anything."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"filepath")," arg is the absolute ",(0,o.kt)("inlineCode",{parentName:"p"},"filesystem")," ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"folder and filename"))," path that the file will be persisted. It is used\nto process the import list of the file, format it (the underlying build tool needs this to get the context) and, of course,\npersist it."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In this step, the ",(0,o.kt)("a",{parentName:"p",href:"https://pkg.go.dev/golang.org/x/tools/imports#Process"},"imports.Process")," will be applied to the final\nfile content, adjusting the imports (extra formatting, if needed, and removing unused imports)"))),(0,o.kt)("h3",{id:"example-1"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "github.com/mathbalduino/go-codegen/goFile"\n)\n\nfunc main() {\n    newFile := goFile.New("exampleFile", "parser", "github.com/mathbalduino/go-log")\n    newFile.AddImport("fmt", "fmt")\n    newFile.AddImport("time", "time") // will be removed\n    \n    newFile.AddCode("func exampleFn() { fmt.Printf(\\"Hello world: %s\\\\n\\", exampleConstant) }")\n    newFile.AddCode("const exampleConstant = \\"go-codegen\\"")\n\n    newFile.Save("<some header title>", "/") // root folder\n    // File content: \n    //    /*\n    //    || \n    //    || <some header title> \n    //    || \n    //    || File generated using github.com/mathbalduino/go-codegen \n    //    || by Matheus Leonel Balduino \n    //    || \n    //    || Everywhere, under @mathbalduino: \n    //    ||   GitLab:    @mathbalduino \n    //    ||   Instagram: @mathbalduino \n    //    ||   Twitter:   @mathbalduino \n    //    ||   WebSite:   mathbalduino.com.br/go-codegen\n    //    || \n    //    */\n    // \n    //    package parser\n    //\n    //    import (\n    //       fmt "fmt"\n    //    )\n    //\n    //    func exampleFn() { fmt.Printf("Hello world: %s\\n", exampleConstant) }\n    //\n    //    const exampleConstant = "go-codegen"\n}\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The comment section will not override the package documentation, since it's not attached to the ",(0,o.kt)("inlineCode",{parentName:"p"},"package")," keyword. You can\nsafely use a ",(0,o.kt)("inlineCode",{parentName:"p"},"doc.go")," file in the same package folder to define its documentation"))))}h.isMDXComponent=!0}}]);