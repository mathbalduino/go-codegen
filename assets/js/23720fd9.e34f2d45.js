"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[169],{7267:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],s={sidebar_position:2},p="*GoParser API",l={unversionedId:"go-parser-api",id:"go-parser-api",isDocsHomePage:!1,title:"*GoParser API",description:"The library main type is the *GoParser. With this struct, you can call methods that iterate",source:"@site/docs/go-parser-api.md",sourceDirName:".",slug:"/go-parser-api",permalink:"/go-codegen/docs/go-parser-api",editUrl:"https://github.com/mathbalduino/go-codegen/edit/docs/docs/go-parser-api.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/go-codegen/docs/intro"},next:{title:"Helpers",permalink:"/go-codegen/docs/helpers"}},c=[{value:"Creating a *GoParser instance",id:"creating-a-goparser-instance",children:[]},{value:"Configuration",id:"configuration",children:[{value:"Focus",id:"focus",children:[]}]},{value:"Iterate interfaces",id:"iterate-interfaces",children:[]},{value:"Iterate structs",id:"iterate-structs",children:[]},{value:"Other iterators",id:"other-iterators",children:[]},{value:"Some notes",id:"some-notes",children:[]}],d={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"goparser-api"},"*GoParser API"),(0,o.kt)("p",null,"The library main type is the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoParser"),". With this ",(0,o.kt)("inlineCode",{parentName:"p"},"struct"),", you can call methods that iterate\nover the ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," parsed code, allowing you to gather information and generate new code (be it ",(0,o.kt)("inlineCode",{parentName:"p"},"go"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"js"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"ts"),", etc)."),(0,o.kt)("p",null,"This type is a wrapper around the ",(0,o.kt)("inlineCode",{parentName:"p"},"golang.org/x/tools/go/packages")," API, that at the time I used\nwas very hard to understand and use. After reading ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/golang/example/blob/master/gotypes/go-types.md"},"this article"),"\nmultiple times, I came with this idea."),(0,o.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"I strongly recommend you to read the above article, to fully understand what we'll talk about. I'll assume that you've\nread"))),(0,o.kt)("h2",{id:"creating-a-goparser-instance"},"Creating a *GoParser instance"),(0,o.kt)("p",null,"You can create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoParser")," instance using the ",(0,o.kt)("inlineCode",{parentName:"p"},"NewGoParser")," function, exported by the root package.\nIt takes a ",(0,o.kt)("inlineCode",{parentName:"p"},"pattern")," ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," and a ",(0,o.kt)("inlineCode",{parentName:"p"},"Config")," ",(0,o.kt)("inlineCode",{parentName:"p"},"struct"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func NewGoParser(pattern string, config Config) (*GoParser, error) { ... }\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"pattern")," ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," is forwarded directly to the ",(0,o.kt)("inlineCode",{parentName:"p"},"packages.Load")," function. If you want to see details\nabout what is this string, go to the official ",(0,o.kt)("a",{parentName:"p",href:"https://pkg.go.dev/golang.org/x/tools/go/packages#pkg-overview"},"packages docs"),"."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"When you create the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoParser")," instance (calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"NewGoParser")," function), the ",(0,o.kt)("inlineCode",{parentName:"p"},"packages.Load")," function is called\nto parse the code. Depending on the size of the code to parse, this function call can be expensive."))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Any errors that occur when calling ",(0,o.kt)("inlineCode",{parentName:"p"},"packages.Load")," will be directly returned to the caller of ",(0,o.kt)("inlineCode",{parentName:"p"},"NewGoParser"),",\nwith a nil ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoParser")," reference."))),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Before creating a new ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoParser")," instance, you will need to read about the ",(0,o.kt)("inlineCode",{parentName:"p"},"Config")," struct, that\nacts as a wrapper around the ",(0,o.kt)("inlineCode",{parentName:"p"},"packages.Config"),", plus some other info:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type Config struct {\n    Tests       bool\n    Dir         string\n    Env         []string\n    Fset        *token.FileSet\n    BuildFlags  []string\n    Focus       *ParserFocus\n    LogFlags    uint64\n}\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Tests"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Dir"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Env"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Fset")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"BuildFlags")," are directly forwarded to the underlying ",(0,o.kt)("inlineCode",{parentName:"p"},"packages.Config"),"\nstruct. If you need to see more info about it, see the ",(0,o.kt)("a",{parentName:"p",href:"https://pkg.go.dev/golang.org/x/tools/go/packages#Config"},"packages.Config docs")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"You will notice that the ",(0,o.kt)("inlineCode",{parentName:"p"},"packages.Config")," has many fields that aren't present inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"go-codegen.Config"),".\nThis is on purpose. If you need to use one of the excluded fields, please ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-codegen/issues/new"},"let me know")))),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"LogFlags")," field is used to control the amount of information that the library will write to the ",(0,o.kt)("inlineCode",{parentName:"p"},"stdout"),",\nusing the ",(0,o.kt)("a",{parentName:"p",href:"https://mathbalduino.com.br/go-log/docs/advanced/logger_cli"},"LoggerCLI")," (another library that belongs to\nmy personal stack). The flags will be directly forwarded to it. Note that since this lib uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"LoggerCLI"),", it's\npossible to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"beautify")," package, from the ",(0,o.kt)("inlineCode",{parentName:"p"},"LoggerCLI")," itself, to pretty-print the generated output. You can see\nthe available flags at the ",(0,o.kt)("a",{parentName:"p",href:"https://mathbalduino.com.br/go-log/docs/basic-concepts/configuration#lvlsenabled-usage"},"go-log"),"\nofficial documentation (note that the ",(0,o.kt)("inlineCode",{parentName:"p"},"go-codegen")," library re-exports these flags, so you don't need to point to ",(0,o.kt)("inlineCode",{parentName:"p"},"go-log"),"\ndirectly)."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In addition to the original ",(0,o.kt)("inlineCode",{parentName:"p"},"go-log")," flags, there's an extra one: ",(0,o.kt)("inlineCode",{parentName:"p"},"LogJSON"),". This extra flag belongs to the ",(0,o.kt)("inlineCode",{parentName:"p"},"go-codegen"),"\nitself, and is used to control whether the logs are converted (or not) to ",(0,o.kt)("inlineCode",{parentName:"p"},"json"),", before being sent to the ",(0,o.kt)("inlineCode",{parentName:"p"},"stdout")))),(0,o.kt)("h3",{id:"focus"},"Focus"),(0,o.kt)("p",null,"Sometimes, you will want to parse the ",(0,o.kt)("inlineCode",{parentName:"p"},"go")," code but iterate only over some specific thing. You can parse a\npackage that contains many files, but just want to iterate over a specific file, for example. To do it, you\nmust give a ",(0,o.kt)("inlineCode",{parentName:"p"},"*ParserFocus")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Config"),", at ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoParser")," creation time."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"root")," package exports three functions that you can use to create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"*ParserFocus"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func FocusPackagePath(packagePath string) *Focus { ... }\nfunc FocusFilePath(filePath string) *Focus { ... }\nfunc FocusTypeName(typeName string) *Focus { ... }\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Currently, it's not possible to combine multiple focuses. If you want to filter packages and types, you will have\nto choose one of them. If you need multiple focuses, please ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-codegen/issues/new"},"let me know")))),(0,o.kt)("p",null,"Example: if you want to parse the ",(0,o.kt)("inlineCode",{parentName:"p"},"codeToParse.go")," file, that contains 3 ",(0,o.kt)("inlineCode",{parentName:"p"},"structs"),", but iterate only over the\n",(0,o.kt)("inlineCode",{parentName:"p"},"StructB"),", you can do something like this (consider ",(0,o.kt)("inlineCode",{parentName:"p"},"workdir")," to be anything):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="<workdir>/codeToParse.go"',title:'"<workdir>/codeToParse.go"'},"package main\n\ntype StructA struct {\n    FieldA string\n    FieldB string\n}\n\ntype StructB struct {\n    FieldC string\n    FieldD string\n}\n\ntype StructC struct {\n    FieldE string\n    FieldF string\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="<workdir>/main.go"',title:'"<workdir>/main.go"'},'package main\n\nimport "github.com/mathbalduino/go-codegen"\n\nfunc main() {\n    config := parser.Config{\n        Focus: parser.FocusTypeName("StructB"),\n    }\n    // ...\n}\n')),(0,o.kt)("p",null,"With this ",(0,o.kt)("inlineCode",{parentName:"p"},"Config"),", the iterator will skip every type name that's different from ",(0,o.kt)("inlineCode",{parentName:"p"},'"StructB"'),"."),(0,o.kt)("h2",{id:"iterate-interfaces"},"Iterate interfaces"),(0,o.kt)("p",null,"After the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoParser")," instantiation (and code parsing), you can call the method below to iterate over ",(0,o.kt)("inlineCode",{parentName:"p"},"interfaces"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// just an alias\ntype InterfacesIterator = func(interface_ *types.TypeName, logger LoggerCLI) error\n\nfunc (p *GoParser) IterateInterfaces(callback InterfacesIterator) error { ... }\n")),(0,o.kt)("p",null,"With this method, you pass a callback function that will be executed once for every ",(0,o.kt)("inlineCode",{parentName:"p"},"interface")," type inside the\nparsed code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="<workdir>/codeToParse.go"',title:'"<workdir>/codeToParse.go"'},"package main\n\ntype StructA struct {\n    FieldA string\n    FieldB string\n}\n\ntype InterfaceA interface {\n    MethodA()\n    MethodB()\n}\n\n// private\ntype interfaceB interface {\n    methodC()\n    methodD()\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="<workdir>/main.go"',title:'"<workdir>/main.go"'},'package main\n\nimport (\n    "fmt"\n    "github.com/mathbalduino/go-codegen"\n    "go/types"\n)\n\nfunc main() {\n    config := parser.Config{}\n    \n    // Assuming the code is being executed at <workdir>\n    p, e := parser.NewGoParser("./", config)\n    if e != nil {\n        panic(e)\n    }\n    \n    // stdout:\n    //      InterfaceA\n    //      interfaceB\n    e = p.IterateInterfaces(func(interface_ *types.TypeName, logger parser.LoggerCLI) error {\n        fmt.Println(interface_.Name())\n        return nil\n    })\n    if e != nil {\n        panic(e)\n    }\n}\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The example above will parse the ",(0,o.kt)("inlineCode",{parentName:"p"},"<workdir>/main.go")," too, but it will be completely ignored, since there's no\n",(0,o.kt)("inlineCode",{parentName:"p"},"interfaces")," inside it"))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you return some error from the callback function, this error will be returned to the caller of\n",(0,o.kt)("inlineCode",{parentName:"p"},"IterateInterfaces"),", stopping its execution."))),(0,o.kt)("h2",{id:"iterate-structs"},"Iterate structs"),(0,o.kt)("p",null,"After the ",(0,o.kt)("inlineCode",{parentName:"p"},"*GoParser")," instantiation (and code parsing), you can call the method below to iterate over ",(0,o.kt)("inlineCode",{parentName:"p"},"structs"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// just an alias\ntype StructsIterator = func(struct_ *types.TypeName, logger LoggerCLI) error\n\nfunc (p *GoParser) IterateStructs(callback StructsIterator) error { ... }\n")),(0,o.kt)("p",null,"With this method, you pass a callback function that will be executed once for every ",(0,o.kt)("inlineCode",{parentName:"p"},"struct")," type inside the\nparsed code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="<workdir>/codeToParse.go"',title:'"<workdir>/codeToParse.go"'},"package main\n\ntype StructA struct {\n    FieldA string\n    FieldB string\n}\n\n// private\ntype structB interface {\n    fieldA string\n    fieldB string\n}\n\ntype interfaceB interface {\n    methodC()\n    methodD()\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="<workdir>/main.go"',title:'"<workdir>/main.go"'},'package main\n\nimport (\n    "fmt"\n    "github.com/mathbalduino/go-codegen"\n    "go/types"\n)\n\nfunc main() {\n    config := parser.Config{}\n    \n    // Assuming the code is being executed at <workdir>\n    p, e := parser.NewGoParser("./", config)\n    if e != nil {\n        panic(e)\n    }\n    \n    // stdout:\n    //      StructA\n    //      structB\n    e = p.IterateStructs(func(struct_ *types.TypeName, logger parser.LoggerCLI) error {\n        fmt.Println(struct_.Name())\n        return nil\n    })\n    if e != nil {\n        panic(e)\n    }\n}\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The example above will parse the ",(0,o.kt)("inlineCode",{parentName:"p"},"<workdir>/main.go")," too, but it will be completely ignored, since there's no\n",(0,o.kt)("inlineCode",{parentName:"p"},"structs")," inside it"))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you return some error from the callback function, this error will be returned to the caller of\n",(0,o.kt)("inlineCode",{parentName:"p"},"IterateStructs"),", stopping its execution."))),(0,o.kt)("h2",{id:"other-iterators"},"Other iterators"),(0,o.kt)("p",null,"The library comes with other iterators, but I keep them private to reduce the API size. Take a look:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"func (p *GoParser) iterateTypeNames(callback typeNamesIterator) error { ... }\nfunc (p *GoParser) iterateFiles(callback filesIterator) error { ... }\nfunc (p *GoParser) iteratePackages(callback packagesIterator) error { ... }\n")),(0,o.kt)("p",null,"Internally, these methods are used to compose the exported ones."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you think it's interesting to export any of these methods, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-codegen/issues/new"},"let me know")))),(0,o.kt)("h2",{id:"some-notes"},"Some notes"),(0,o.kt)("p",null,"As you've seemed, this library doesn't abstract the most primitive types from ",(0,o.kt)("inlineCode",{parentName:"p"},"go/types"),". When you call ",(0,o.kt)("inlineCode",{parentName:"p"},"IterateInterfaces"),"\nor ",(0,o.kt)("inlineCode",{parentName:"p"},"IterateStructs"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"*types.TypeName")," that the callback receives has all the necessary information about the\nunderlying type (name, fields, methods, etc)."),(0,o.kt)("p",null,"The library iterates over the parsed code using a ",(0,o.kt)("inlineCode",{parentName:"p"},"single-threaded")," strategy. This can be improved in the future, but for\nnow I don't see the necessity. If you think I'm wrong, please ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-codegen/issues/new"},"let me know"),"."))}m.isMDXComponent=!0}}]);