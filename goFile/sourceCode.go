package goFile

import (
	"fmt"
	"gitlab.com/loxe-tools/go-base-library/brand"
	"go/format"
	"golang.org/x/tools/imports"
)

// SourceCode will return the content of the file, with the 'package' and 'import'
// keywords
//
// The filepath param is used to optimize the file imports. It must contain the
// folderpath information with the filename
//
// Note that you need to pass the name of the library that
// generated it, in order to provide good debug information
// inside the generated file
func (f *GoFile) SourceCode(libraryThatGeneratedIt, filepath string) ([]byte, error) {
	headerBrand := fmt.Sprintf("/*%s*/",
		brand.WithSubtitle(brand.GeneratedFileMessage+libraryThatGeneratedIt))

	sourceCode := headerBrand + "\n" +
		"package " + f.packageName + "\n\n" +
		f.privateImports.SourceCode() + "\n\n" +
		f.sourceCode + "\n\n" +
		fmt.Sprintf("// Code generated by %s, DO NOT EDIT.", libraryThatGeneratedIt) + "\n"

	formattedCode, e := format.Source([]byte(sourceCode))
	if e != nil {
		return nil, e
	}
	importOptimizedCode, e := imports.Process(filepath, formattedCode, nil)
	if e != nil {
		return nil, e
	}

	return importOptimizedCode, nil
}
